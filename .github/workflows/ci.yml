name: CI-CD with Eco-Responsibility

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: cd backend && npm install

      - name: Run tests
        run: cd backend && npm test

  eco-check:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies
        run: cd backend && npm install

      - name: Launch app in background
        run: |
          cd backend
          npm start &
          sleep 5

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install Lighthouse CLI
        run: npm install -g @lhci/cli

      - name: Run Lighthouse audit with thresholds
        run: |
          # Génère JSON + HTML
          npx lighthouse http://localhost:3000 \
            --output=json \
            --output=html \
            --output-path=./lighthouse-report \
            --chrome-flags="--headless --no-sandbox --disable-gpu"

          # Vérifie que le JSON est bien lisible
          cat lighthouse-report.report.json | jq '.' > /dev/null

          perf=$(jq '.categories.performance.score * 100' lighthouse-report.report.json)
          acc=$(jq '.categories.accessibility.score * 100' lighthouse-report.report.json)
          seo=$(jq '.categories.seo.score * 100' lighthouse-report.report.json)

          echo "Performance = $perf"
          echo "Accessibilité = $acc"
          echo "SEO = $seo"

          if [ "$perf" -lt 50 ]; then
            echo "❌ Score performance trop faible (< 50)"
            exit 1
          fi
          if [ "$acc" -lt 50 ]; then
            echo "❌ Score accessibilité trop faible (< 50)"
            exit 1
          fi
          if [ "$seo" -lt 50 ]; then
            echo "❌ Score SEO trop faible (< 50)"
            exit 1
          fi

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            lighthouse-report.report.json
            lighthouse-report.report.html
